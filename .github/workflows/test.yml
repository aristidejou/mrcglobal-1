name: Create Baseline Repo

on:
  workflow_dispatch:
    inputs:
      repo_name:
        description: 'New Repo Name'
        required: true

env:  
    org_name: tanekemgang # Your Organization Name
    base_repo: mrcglobal # Your Github Base Repository Names
    webhook: https://jenkinsprod-webhook.mrcglobal.com/github-webhook/

jobs:
  create-repository:
    runs-on: ubuntu-latest
    name: Creating Repository
    steps:
      - name: Check if repository exists
        run: |
          REPO_NAME="${{ github.event.inputs.repo_name }}"
          ORG_NAME="${{ env.org_name }}"
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/$ORG_NAME/$REPO_NAME)
          if [ $RESPONSE -eq 200 ]; then
            echo "REPO_EXISTS=true" >> $GITHUB_ENV
          else
            echo "REPO_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create new public repository
        if: env.REPO_EXISTS == 'false'
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
          -d '{"name": "${{ github.event.inputs.repo_name }}", "private": true, "default_branch": "master"}' \
          https://api.github.com/orgs/${{ env.org_name }}/repos

      - name: Initialize repository
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/git/refs \
          -d '{"ref": "refs/heads/main", "sha": "4b825dc642cb6eb9a060e54bf8d69288fbee4904"}'

      - name: WORK DONE FOR README.md File
        run: |
          curl -O https://raw.githubusercontent.com/${{ env.org_name }}/${{ env.base_repo }}/main/README.md
          curl -X PUT -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
               -H "Content-Type: application/json" \
               -d '{"message": "Add README.md", "content": "'"$(base64 README.md)"'"}' \
               https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/contents/README.md       
          curl -X POST -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
          https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/contents/README.md 
          curl -X POST -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
          https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/git/refs \
          -d '{"ref": "refs/heads/main", "sha": "'"$(curl -H "Authorization: token ${{ secrets.BASELINE_REPO }}" https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/git/refs/heads/main | jq -r '.object.sha')"'", "force": true}'

      - name: WORK DONE FOR .GITIGNORE File
        run: |
          curl -O https://raw.githubusercontent.com/${{ env.org_name }}/${{ env.base_repo }}/main/.gitignore
          curl -X PUT -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
               -H "Content-Type: application/json" \
               -d '{"message": "Add .gitignore", "content": "'"$(base64 .gitignore)"'"}' \
               https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/contents/.gitignore       
          curl -X POST -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
          -d '{"message": "Add .gitignore", "content": "'"$(base64 .gitignore)"'", "branch": "main"}' \
          https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/contents/.gitignore 
          curl -X POST -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
          https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/git/refs \
          -d '{"ref": "refs/heads/main", "sha": "'"$(curl -H "Authorization: token ${{ secrets.BASELINE_REPO }}" https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/git/refs/heads/main | jq -r '.object.sha')"'", "force": true}'

      - name: WORK DONE FOR CODEOWNERS File
        run: |
          curl -O https://raw.githubusercontent.com/${{ env.org_name }}/${{ env.base_repo }}/main/CODEOWNERS
          curl -X PUT -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
               -H "Content-Type: application/json" \
               -d '{"message": "Add CODEOWNERS", "content": "'"$(base64 CODEOWNERS)"'"}' \
               https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/contents/CODEOWNERS       
          curl -X POST -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
               -d '{"message": "Add CODEOWNERS", "content": "'"$(base64 CODEOWNERS)"'", "branch": "main"}' \
               https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/contents/CODEOWNERS 
          curl -X POST -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
               https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/git/refs \
               -d '{"ref": "refs/heads/main", "sha": "'"$(curl -H "Authorization: token ${{ secrets.BASELINE_REPO }}" https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/git/refs/heads/main | jq -r '.object.sha')"'", "force": true}'
  
  configure-repository:
    needs: create-repository
    runs-on: ubuntu-latest
    name: Configuring Repository
    steps:
      - name: Get SHA of master branch
        run: |
          MASTER_SHA=$(curl -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
              https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/git/refs/heads/main | jq -r '.object.sha')
          echo "MASTER_SHA=$MASTER_SHA" >> $GITHUB_ENV

      - name: Make Other Branched Too
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/git/refs \
               -d '{"ref": "refs/heads/master", "sha": "${{env.MASTER_SHA}}"}'
          curl -X POST -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/git/refs \
               -d '{"ref": "refs/heads/development", "sha": "${{env.MASTER_SHA}}"}'
           curl -X POST -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/git/refs \
               -d '{"ref": "refs/heads/test", "sha": "${{env.MASTER_SHA}}"}'
           curl -X POST -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/git/refs \
               -d '{"ref": "refs/heads/production", "sha": "${{env.MASTER_SHA}}"}'
            curl -X DELETE -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
               https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/git/refs/heads/main
            curl -X PATCH -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
              -d '{"default_branch": "master"}' \
              https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}
      - name: 3 Teams Configuration
        run: |
          curl -X PATCH -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/orgs/${{ env.org_name }}/teams/mulesoft-admin/ \
               -d '{"permission": "admin"}'

          curl -X PATCH -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/orgs/${{ env.org_name }}/teams/mulesoft-ro/ \
               -d '{"permission": "read"}'

          curl -X PATCH -H "Authorization: token ${{ secrets.BASELINE_REPO }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/orgs/${{ env.org_name }}/teams/mulesoft-rw/ \
               -d '{"permission": "write"}'
  set-branch-protection:
    needs: configure-repository
    runs-on: ubuntu-latest
    steps:
      - name: Set Branch Protection Rules
        run: |
          # Set branch protection rules for master
          curl -L \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.BASELINE_REPO }}"\
            https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/branches/master/protection \
            -d '{"required_pull_request_reviews": {"dismiss_stale_reviews": true, "require_code_owner_reviews": true, "required_approving_review_count": 1}, "enforce_admins": true, "restrictions": {"users": [], "teams": [], "apps": []}, "required_status_checks": null, "allow_force_pushes": false, "allow_deletions": false}'
          curl -L \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.BASELINE_REPO }}"\
            https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/branches/test/protection \
            -d '{"required_pull_request_reviews": {"dismiss_stale_reviews": true, "require_code_owner_reviews": true, "required_approving_review_count": 1}, "enforce_admins": true, "restrictions": {"users": [], "teams": [], "apps": []}, "required_status_checks": null, "allow_force_pushes": false, "allow_deletions": false}'
          curl -L \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.BASELINE_REPO }}"\
            https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/branches/deployment/protection \
            -d '{"required_pull_request_reviews": {"dismiss_stale_reviews": true, "require_code_owner_reviews": true, "required_approving_review_count": 1}, "enforce_admins": true, "restrictions": {"users": [], "teams": [], "apps": []}, "required_status_checks": null, "allow_force_pushes": false, "allow_deletions": false}'
          curl -L \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.BASELINE_REPO }}"\
            https://api.github.com/repos/${{ env.org_name }}/${{ github.event.inputs.repo_name }}/branches/production/protection \
            -d '{"required_pull_request_reviews": {"dismiss_stale_reviews": true, "require_code_owner_reviews": true, "required_approving_review_count": 2}, "enforce_admins": true, "restrictions": {"users": [], "teams": [], "apps": []}, "required_status_checks": null, "allow_force_pushes": false, "allow_deletions": false}'   
  send_payload:
    needs: set-branch-protection
    runs-on: ubuntu-latest
    steps:
      - name: Send Payload via CURL
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"message": "Hello, webhook!"}' ${{env.webhook}}
